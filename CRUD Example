import { data, error } from "jquery";
import React, { useState, useEffect } from "react"
import { Fragment } from "react";
import Table from 'react-bootstrap/Table';
import 'bootstrap/dist/css/bootstrap.min.css';
import { isTemplateExpression } from "typescript";
import Button from 'react-bootstrap/Button';
import Modal from 'react-bootstrap/Modal';
import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';
import axios from "axios";
import { getData } from "ajv/dist/compile/validate";
import { ToastContainer, toast } from "react-toastify";
import 'react-toastify/dist/ReactToastify.css';

const CRUD = () => {

    const [show, setShow] = useState(false);
    const handleClose = () => setShow(false);
    const handleShow = () => setShow(true);

    const [Name, setName] = useState('')
    const [Age, setAge] = useState('')
    const [isActive, setIsActive] = useState(0)

    const [editID, setEditID] = useState('')
    const [editName, setEditName] = useState('')
    const [editAge, setEditAge] = useState('')
    const [editIsActive, setEditIsActive] = useState(0)


    const empdata = [
        {
            id: 1,
            name: 'Faisal',
            age: 29,
            isActive: 1
        },
        {
            id: 2,
            name: 'Mister',
            age: 25,
            isActive: 1
        },
        {
            id: 3,
            name: 'Hoppie',
            age: 5,
            isActive: 1
        },
        {
            id: 4,
            name: 'Timmy',
            age: 29,
            isActive: 1
        },
        {
            id: 5,
            name: 'Jimmy',
            age: 25,
            isActive: 1
        }
    ]

    const [data, setData] = useState([]);

    const getData = () => {
        axios.get('https://localhost:7234/api/Employees')
            .then((result) => {
                setData(result.data)
            })
            .catch((error) => {
                console.log(error)
            })

    }

    useEffect(() => {
        getData();
        //setData(empdata);

    }, [])

    const handleActiveChange = (e) => {
        if (e.target.checked) {
            setIsActive(1);
        }
        else {
            setIsActive(0);
        }

    }

    const handleEditActiveChange = (e) => {
        if (e.target.checked) {
            setEditIsActive(1);
        }
        else {
            setEditIsActive(0);
        }

    }

    const handleEdit = (empId) => {
        // alert(id);
        handleShow();
        axios.get(`https://localhost:7234/api/Employees/${empId}`)
            .then((result) => {
                setEditName(result.data.empName);
                setEditID(empId);
            })
            .catch((error) => {
                console.log(error)
            })
    }

    const handleDelete = (empId) => {
        if (window.confirm("Are you sure you want to delete this employee") === true) {
            axios.delete(`https://localhost:7234/api/Employees/${empId}`)
                .then((result) => {
                    if (result.status === 204) {
                        toast.success('Employee has been deleted');
                        getData();
                    }
                })
                .catch((error) => {
                    toast.error(error);
                })
        }
    }

    const handleUpdate = () => {
        const url = `https://localhost:7234/api/Employees/${editID}`;
        const data = {
            "empId": editID,
            "empName": editName,
            "empSalary": editAge
        }

        axios.put(url, data)
            .then((result) => {
                handleClose();
                getData();
                clear();
                toast.success('Employee has been updated');
            }).catch((error) => {
                toast.error(error);
            })

    }

    const handleSave = () => {
        const url = 'https://localhost:7234/api/Employees';
        const data = {
            "empName": Name,
            "empSalary": Age
        }

        axios.post(url, data)
            .then((result) => {
                getData();
                clear();
                toast.success('Employee has been added');
            }).catch((error) => {
                toast.error(error);
            })
    }

    const clear = () => {
        setName('');
        setAge('');
        setIsActive(0);
        setEditName('');
        setEditAge('');
        setEditIsActive(0);
        setEditID('');
    }

    return (
        <Fragment>
            <ToastContainer />
            <Container>
                <Row>
                    <Col>
                        <input type="text" className="form-control" placeholder="Enter Name"
                            value={Name} onChange={(e) => setName(e.target.value)}
                        />
                    </Col>
                    <Col>
                        <input type="text" className="form-control" placeholder="Enter Age"
                            value={Age} onChange={(e) => setAge(e.target.value)}
                        />
                    </Col>
                    <Col>
                        <input type="checkbox"
                            checked={isActive === 1 ? true : false}
                            onChange={(e) => handleActiveChange(e)} value={isActive}
                        />
                        <label>IsActive</label>
                        <label></label>
                    </Col>
                    <Col>
                        <button className="btn btn-primary" onClick={() => handleSave()}>Submit</button>
                    </Col>
                </Row>
            </Container>

            <br></br>

            <Table striped bordered hover>
                <thead>
                    <tr>
                        <th>#</th>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Age</th>
                        <th>IsActiive</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {
                        data && data.length > 0 ?
                            data.map((item, index) => {
                                return (
                                    <tr key={index}>
                                        <td>{index + 1}</td>
                                        <td>{item.empId}</td>
                                        <td>{item.empName}</td>.
                                        <td>{item.empSalary}</td>
                                        <td>{item.empage}</td>
                                        <td>{item.isActive}</td>
                                        <td colSpan={2}>
                                            <button className='btn btn-primary' onClick={() => handleEdit(item.empId)}>Edit</button> &nbsp;
                                            <button className='btn btn-danger' onClick={() => handleDelete(item.empId)}>Delete</button>
                                        </td>
                                    </tr>
                                )
                            })
                            : 'Loading..'
                    }
                </tbody>
            </Table>

            <Modal show={show} onHide={handleClose}>
                <Modal.Header closeButton>
                    <Modal.Title>Modal Employee</Modal.Title>
                </Modal.Header>
                <Modal.Body>
                    <Row>
                        <Col>
                            <input type="text" className="form-control" placeholder="Enter Name"
                                value={editName} onChange={(e) => setEditName(e.target.value)}
                            />
                        </Col>
                        <Col>
                            <input type="text" className="form-control" placeholder="Enter Age"
                                value={editAge} onChange={(e) => setEditAge(e.target.value)}
                            />
                        </Col>
                        <Col>
                            <input type="checkbox"
                                checked={editIsActive === 1 ? true : false}
                                onChange={(e) => handleEditActiveChange(e)} value={editIsActive}
                            />
                            <label>IsActive</label>
                            <label></label>
                        </Col>
                    </Row>
                </Modal.Body>
                <Modal.Footer>
                    <Button variant="secondary" onClick={handleClose}>
                        Close
                    </Button>
                    <Button variant="primary" onClick={handleUpdate}>
                        Save Changes
                    </Button>
                </Modal.Footer>
            </Modal>
        </Fragment>
    )
}


export default CRUD;
